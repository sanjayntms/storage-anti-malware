# This template will create a Key Vault instance, if one with the same name in the same resource group does not
# already exist. Will also configure a private endpoint for the newly created Key Vault.
#
---
parameters:
  - name: subscriptionId
    type: string
  - name: serviceConnectionName
    type: string
  - name: resourceGroupName
    type: string
  - name: location
    type: string
  - name: keyVaultName
    type: string
  - name: logAnalyticsWorkspaceName
    type: string
  - name: diagnosticSettingName
    type: string
  - name: servicePrincipalObjectId
    type: string

steps:
  - task: AzureCLI@2
    displayName: Check if Key Vault exists
    inputs:
      azureSubscription: ${{ parameters.serviceConnectionName }}
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: |
        $KeyVaultResource = az resource list --name '${{ parameters.keyVaultName }}' --resource-group '${{ parameters.resourceGroupName }}' --location '${{ parameters.location }}' | ConvertFrom-Json
        $KeyVaultExists = [bool]$KeyVaultResource
        Write-Host "##vso[task.setvariable variable=KeyVaultExists]$KeyVaultExists"
        Write-Host "Key Vault exists: $KeyVaultExists"

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: Create Key Vault
    condition: eq(variables.KeyVaultExists, 'False')
    inputs:
      deploymentScope: 'Resource Group'
      subscriptionId: ${{ parameters.subscriptionId }}
      azureResourceManagerConnection: ${{ parameters.serviceConnectionName }}
      resourceGroupName: ${{ parameters.resourceGroupName }}
      location: ${{ parameters.location }}
      action: 'Create Or Update Resource Group'
      templateLocation: 'Linked artifact'
      csmFile: './arm-templates/key_vault.json'
      csmParametersFile: './arm-templates/key_vault.parameters.json'
      addSpnToEnvironment: true
      overrideParameters: >
        -keyVaultName ${{ parameters.keyVaultName }}
        -location ${{ parameters.location }}
        -logAnalyticsWorkspaceName ${{ parameters.logAnalyticsWorkspaceName }}
        -diagnosticSettingName ${{ parameters.diagnosticSettingName }}
        -servicePrincipalId $servicePrincipalId
        -servicePrincipalObjectId ${{ parameters.servicePrincipalObjectId }}
      deploymentMode: 'Incremental'
