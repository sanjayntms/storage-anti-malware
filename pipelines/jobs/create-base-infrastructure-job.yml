# This job creates all the resources of the base infrastructure.
#
# The following resources will be created and configured:
#
#   * Azure Monitoring:
#     * Application Insights
#     * Log Analytics
#   * Key Vault
#   * Data Lake Storage (Gen2)
#   * Container Registry

---
parameters:
  - name: environment
    type: string
  - name: resourceGroupName
    type: string
  - name: serviceConnectionName
    type: string
  - name: location
    type: string
  - name: applicationInsightsName
    type: string
  - name: logAnalyticsWorkspaceName
    type: string
  - name: keyVaultName
    type: string
  - name: storageAccountName
    type: string
  - name: storageContainerName
    type: string
  - name: containerRegistryName
    type: string

jobs:
  - deployment: BaseInfrastructure
    environment: ${{ parameters.environment }}
    pool:
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self

            - task: PowerShell@2
              displayName: Set build agent tools
              inputs:
                filePath: "./scripts/agent/Set-AgentTools.ps1"
                pwsh: true

            # This tasks provides the job with the following variables:
            #
            #   - subscriptionId
            #   - servicePrincipalObjectId
            #
            - task: AzureCLI@2
              displayName: Set Azure IDs to task variables
              inputs:
                azureSubscription: ${{ parameters.serviceConnectionName }}
                scriptType: "pscore"
                scriptLocation: "scriptPath"
                ScriptPath: "./scripts/environment/New-EnvironmentVariables.ps1"
                addSpnToEnvironment: true

            - template: ../templates/log-analytics.yml
              parameters:
                subscriptionId: $(subscriptionId)
                serviceConnectionName: ${{ parameters.serviceConnectionName }}
                resourceGroupName: ${{ parameters.resourceGroupName }}
                location: ${{ parameters.location }}
                logAnalyticsWorkspaceName: ${{ parameters.logAnalyticsWorkspaceName }}
                sku: pergb2018
                diagnosticSettingName: setByPipeline

            - template: ../templates/app-insights.yml
              parameters:
                subscriptionId: $(subscriptionId)
                serviceConnectionName: ${{ parameters.serviceConnectionName }}
                resourceGroupName: ${{ parameters.resourceGroupName }}
                location: ${{ parameters.location }}
                appInsightsName: ${{ parameters.applicationInsightsName }}
                logAnalyticsWorkspaceName: ${{ parameters.logAnalyticsWorkspaceName }}

            - template: ../templates/key-vault.yml
              parameters:
                subscriptionId: $(subscriptionId)
                serviceConnectionName: ${{ parameters.serviceConnectionName }}
                resourceGroupName: ${{ parameters.resourceGroupName }}
                location: ${{ parameters.location }}
                keyVaultName: ${{ parameters.keyVaultName }}
                logAnalyticsWorkspaceName: ${{ parameters.logAnalyticsWorkspaceName }}
                diagnosticSettingName: setByPipeline
                servicePrincipalObjectId: $(servicePrincipalObjectId)

            - template: ../templates/data-lake.yml
              parameters:
                subscriptionId: $(subscriptionId)
                serviceConnectionName: ${{ parameters.serviceConnectionName }}
                resourceGroupName: ${{ parameters.resourceGroupName }}
                location: ${{ parameters.location }}
                storageAccountName: ${{ parameters.storageAccountName }}
                storageContainerName: ${{ parameters.storageContainerName }}
                keyVaultName: ${{ parameters.keyVaultName }}

            - template: ../templates/container-registry.yml
              parameters:
                subscriptionId: $(subscriptionId)
                serviceConnectionName: ${{ parameters.serviceConnectionName }}
                location: ${{ parameters.location }}
                resourceGroupName: ${{ parameters.resourceGroupName }}
                containerRegistryName: ${{ parameters.containerRegistryName }}
                containerRegistrySku: "Standard"
                logAnalyticsWorkspaceName: ${{ parameters.logAnalyticsWorkspaceName }}
                diagnosticSettingName: setByPipeline
